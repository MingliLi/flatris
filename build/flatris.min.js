var Flatris={COLORS:{I:"#3cc7d6",O:"#fbb414",T:"#b04497",J:"#3993d0",L:"#ed652f",S:"#95c43d",Z:"#e84138"},SHAPES:{I:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],O:[[1,1],[1,1]],T:[[0,1,0],[1,1,1],[0,0,0]],J:[[1,0,0],[1,1,1],[0,0,0]],L:[[0,0,1],[1,1,1],[0,0,0]],S:[[0,1,1],[1,1,0],[0,0,0]],Z:[[1,1,0],[0,1,1],[0,0,0]]},WELL_ROWS:20,WELL_COLS:10,DROP_FRAMES_DEFAULT:48,DROP_FRAMES_DECREMENT:1.5,DROP_FRAMES_ACCELERATED:1.5,LINE_CLEAR_BONUSES:[100,300,500,800],KEYS:{UP:38,DOWN:40,LEFT:37,RIGHT:39},attachPointerDownEvent:function(t){return this.isMobileDevice()?{onTouchStart:t}:{onMouseDown:t}},attachPointerUpEvent:function(t){return this.isMobileDevice()?{onTouchEnd:t}:{onMouseUp:t}},isMobileDevice:function(){return"ontouchstart"in window}};Cosmos.components.FlatrisStatePersistor=React.createClass({displayName:"FlatrisStatePersistor",mixins:[Cosmos.mixins.PersistState],children:{flatris:function(){var t=localStorage.getItem("flatrisState");return t?JSON.parse(t):{component:"Flatris"}}},componentDidMount:function(){$(window).on("unload",this.onUnload)},componentWillUnmount:function(){$(window).off("unload",this.onUnload)},render:function(){return this.loadChild("flatris")},onUnload:function(){var t=this.refs.flatris.generateSnapshot(!0);localStorage.setItem("flatrisState",JSON.stringify(t))}}),Cosmos.components.Flatris=React.createClass({displayName:"Flatris",getInitialState:function(){return _.extend(this.getNewGameDefaults(),{playing:!1,nextTetrimino:null})},getNewGameDefaults:function(){return{playing:!0,paused:!0,score:0,lines:0,nextTetrimino:this.getRandomTetriminoType()}},mixins:[Cosmos.mixins.PersistState],children:{well:function(){return{component:"Well",onTetriminoLanding:this.onTetriminoLanding,onFullWell:this.onFullWell}},infoPanel:function(){return!this.state.playing||this.state.paused?{component:"InfoPanel"}:void 0}},start:function(){var t=this.getNewGameDefaults();this.setState(t),this.refs.well.reset(),this.insertNextTetriminoInWell(t.nextTetrimino),this.resume()},pause:function(){this.setState({paused:!0}),this.refs.well.stopAnimationLoop(),this.refs.well.setState({dropAcceleration:!1})},resume:function(){this.setState({paused:!1}),this.refs.well.startAnimationLoop()},render:function(){return React.DOM.div({className:"flatris"},this.loadChild("well"),this.loadChild("infoPanel"),Cosmos(this.getGamePanelProps()),React.DOM.div({className:"controls"},React.DOM.button(Flatris.attachPointerDownEvent(this.onRotatePress),"↻"),React.DOM.button(Flatris.attachPointerDownEvent(this.onLeftPress),"←"),React.DOM.button(Flatris.attachPointerDownEvent(this.onRightPress),"→"),React.DOM.button(_.extend(Flatris.attachPointerDownEvent(this.onPullPress),Flatris.attachPointerUpEvent(this.onPullRelease)),"↓")))},getGamePanelProps:function(){return{component:"GamePanel",playing:this.state.playing,paused:this.state.paused,score:this.state.score,lines:this.state.lines,nextTetrimino:this.state.nextTetrimino,onPressStart:this.start,onPressPause:this.pause,onPressResume:this.resume}},componentDidMount:function(){$(window).on("keydown",this.onKeyDown),$(window).on("keyup",this.onKeyUp)},componentWillUnmount:function(){$(window).off("keydown",this.onKeyDown),$(window).off("keyup",this.onKeyUp)},onKeyDown:function(t){if(-1!=_.values(Flatris.KEYS).indexOf(t.keyCode)&&t.preventDefault(),this.state.playing&&!this.state.paused)switch(t.keyCode){case Flatris.KEYS.DOWN:this.refs.well.setState({dropAcceleration:!0});break;case Flatris.KEYS.UP:this.refs.well.rotateTetrimino();break;case Flatris.KEYS.LEFT:this.refs.well.moveTetriminoToLeft();break;case Flatris.KEYS.RIGHT:this.refs.well.moveTetriminoToRight()}},onKeyUp:function(t){this.state.playing&&!this.state.paused&&t.keyCode==Flatris.KEYS.DOWN&&this.refs.well.setState({dropAcceleration:!1})},onRotatePress:function(t){this.state.playing&&!this.state.paused&&(t.preventDefault(),this.refs.well.rotateTetrimino())},onLeftPress:function(t){this.state.playing&&!this.state.paused&&(t.preventDefault(),this.refs.well.moveTetriminoToLeft())},onRightPress:function(t){this.state.playing&&!this.state.paused&&(t.preventDefault(),this.refs.well.moveTetriminoToRight())},onPullPress:function(t){this.state.playing&&!this.state.paused&&(t.preventDefault(),this.refs.well.setState({dropAcceleration:!0}))},onPullRelease:function(t){this.state.playing&&!this.state.paused&&(t.preventDefault(),this.refs.well.setState({dropAcceleration:!1}))},onTetriminoLanding:function(t){if(this.state.playing){var e=this.state.score,i=this.state.lines,s=Math.floor(i/10)+1;e+=t.hardDrop?2*t.cells:t.cells,t.lines&&(e+=Flatris.LINE_CLEAR_BONUSES[t.lines-1]*s,i+=t.lines),Math.floor(i/10)+1>s&&this.refs.well.state.dropFrames>Flatris.DROP_FRAMES_ACCELERATED&&this.refs.well.increaseSpeed(),this.setState({score:e,lines:i}),this.insertNextTetriminoInWell(this.state.nextTetrimino)}},onFullWell:function(){this.pause(),this.setState({playing:!1,nextTetrimino:null})},insertNextTetriminoInWell:function(t){this.refs.well.loadTetrimino(t),this.setState({nextTetrimino:this.getRandomTetriminoType()})},getRandomTetriminoType:function(){return _.sample(_.keys(Flatris.SHAPES))}}),Cosmos.components.GamePanel=React.createClass({displayName:"GamePanel",getDefaultProps:function(){return{playing:!1,paused:!1,score:0,lines:0,nextTetrimino:null}},render:function(){return React.DOM.div({className:"game-panel"},React.DOM.p({className:"title"},"Flatris"),React.DOM.p({className:"label"},"Score"),React.DOM.p({className:"count"},this.props.score),React.DOM.p({className:"label"},"Lines Cleared"),React.DOM.p({className:"count"},this.props.lines),React.DOM.p({className:"label"},"Next Shape"),React.DOM.div({className:this.getNextTetriminoClass()},this.renderNextTetrimino()),this.renderGameButton())},renderNextTetrimino:function(){var t=this.props.nextTetrimino;if(t)return Cosmos({component:"Tetrimino",color:Flatris.COLORS[t],state:{grid:Flatris.SHAPES[t]}})},renderGameButton:function(){var t,e;return this.props.playing?this.props.paused?(t=this.props.onPressResume,e="Resume"):(t=this.props.onPressPause,e="Pause"):(t=this.props.onPressStart,e="New game"),React.DOM.button(Flatris.attachPointerDownEvent(t),e)},getNextTetriminoClass:function(){var t=["next-tetrimino"];return this.props.nextTetrimino&&t.push("next-tetrimino-"+this.props.nextTetrimino),t.join(" ")}}),Cosmos.components.InfoPanel=React.createClass({displayName:"InfoPanel",render:function(){return React.DOM.div({className:"info-panel"},React.DOM.p({className:"headline"},React.DOM.em(null,"Flatris")," is demo app for the ",React.DOM.a({href:"https://github.com/skidding/cosmos"},"Cosmos")," JavaScript user interface framework, built using ",React.DOM.a({href:"https://github.com/facebook/react"},"React")," components."),React.DOM.p(null,"Inspired by the classic ",React.DOM.a({href:"http://en.wikipedia.org/wiki/Tetris"},"Tetris")," game, the game can be played both with a keyboard using the arrow keys, and on mobile devices using the buttons below."),React.DOM.p(null,"Because Cosmos can serialize the entire state of an application at any given time, Flatris stores your game state into the browser local storage when you close the tab and resumes playing whenever you return. Try a hard-refresh in the middle of a game."),React.DOM.p(null,"The project source has under 1k lines of JS code and is open source on ",React.DOM.a({href:"https://github.com/skidding/flatris"},"GitHub.")))}}),Cosmos.components.SquareBlock=React.createClass({displayName:"SquareBlock",getDefaultProps:function(){return{color:Flatris.COLORS.L}},render:function(){return React.DOM.div({className:"square-block",style:{backgroundColor:this.props.color}})}}),Cosmos.components.Tetrimino=React.createClass({displayName:"Tetrimino",mixins:[Cosmos.mixins.PersistState],getDefaultProps:function(){return{color:Flatris.COLORS.T}},getInitialState:function(){return{grid:Flatris.SHAPES.T}},rotate:function(){this.setState({grid:this.getRotatedGrid()})},getRotatedGrid:function(){var t,e,i=[],s=this.state.grid.length,o=this.state.grid[0].length;for(t=0;s>t;t++)for(i[t]=[],e=0;o>e;e++)i[t][e]=this.state.grid[o-1-e][t];return i},getNumberOfCells:function(){return 4},render:function(){return React.DOM.ul({className:"tetrimino"},this.renderGridBlocks())},renderGridBlocks:function(){var t,e,i=[],s=this.state.grid.length,o=this.state.grid[0].length;for(t=0;s>t;t++)for(e=0;o>e;e++)this.state.grid[t][e]&&i.push(React.DOM.li({className:"grid-square-block",key:t+"-"+e,style:{top:25*t+"%",left:25*e+"%"}},Cosmos({component:"SquareBlock",color:this.props.color})));return i}}),Cosmos.components.WellGrid=React.createClass({displayName:"WellGrid",mixins:[Cosmos.mixins.PersistState],getDefaultProps:function(){return{rows:Flatris.WELL_ROWS,cols:Flatris.WELL_COLS}},getInitialState:function(){return{grid:this.generateEmptyMatrix(),gridBlockCount:0}},reset:function(){this.setState({grid:this.generateEmptyMatrix()}),this.forceUpdate()},transferTetriminoBlocksToGrid:function(t,e){var i,s,o,n,r,a=t.state.grid.length,l=t.state.grid[0].length,c=this.state.gridBlockCount;for(i=0;a>i;i++)for(s=0;l>s;s++)t.state.grid[i][s]&&(o=e.y+i,n=e.x+s,this.state.grid[o]&&(this.state.grid[o][n]=++c+t.props.color));return r=this.clearLinesFromGrid(this.state.grid),this.setState({grid:this.state.grid,gridBlockCount:c}),this.forceUpdate(),r},shouldComponentUpdate:function(){return!1},render:function(){return React.DOM.ul({className:"well-grid"},this.renderGridBlocks())},renderGridBlocks:function(){var t,e,i,s=[],o=100/this.props.cols,n=100/this.props.rows;for(t=0;t<this.props.rows;t++)for(e=0;e<this.props.cols;e++)this.state.grid[t][e]&&(i=this.state.grid[t][e],s.push(React.DOM.li({className:"grid-square-block",key:this.getIdFromBlockValue(i),style:{width:o+"%",height:n+"%",top:t*n+"%",left:e*o+"%"}},Cosmos({component:"SquareBlock",color:this.getColorFromBlockValue(i)}))));return s},generateEmptyMatrix:function(){var t,e,i=[];for(t=0;t<this.props.rows;t++)for(i[t]=[],e=0;e<this.props.cols;e++)i[t][e]=null;return i},clearLinesFromGrid:function(t){var e,i,s,o=0;for(i=this.props.rows-1;i>=0;i--){for(e=!0,s=this.props.cols-1;s>=0;s--)t[i][s]||(e=!1);e&&(this.removeGridRow(i),o++,i++)}return o},removeGridRow:function(t){var e,i;for(e=t;e>=0;e--)for(i=this.props.cols-1;i>=0;i--)this.state.grid[e][i]=e?this.state.grid[e-1][i]:null},getIdFromBlockValue:function(t){return t.split("#")[0]},getColorFromBlockValue:function(t){return"#"+t.split("#")[1]}}),Cosmos.components.Well=React.createClass({displayName:"Well",mixins:[Cosmos.mixins.PersistState,Cosmos.mixins.AnimationLoop],getDefaultProps:function(){return{rows:Flatris.WELL_ROWS,cols:Flatris.WELL_COLS}},getInitialState:function(){return{activeTetrimino:null,activeTetriminoPosition:{x:0,y:0},dropFrames:Flatris.DROP_FRAMES_DEFAULT,dropAcceleration:null}},children:{wellGrid:function(){return{component:"WellGrid"}},activeTetrimino:function(){return this.state.activeTetrimino?{component:"Tetrimino",color:Flatris.COLORS[this.state.activeTetrimino]}:void 0}},reset:function(){this.setState({dropFrames:Flatris.DROP_FRAMES_DEFAULT}),this.refs.wellGrid.reset(),this.loadTetrimino(null)},loadTetrimino:function(t){this.setState({activeTetrimino:t,activeTetriminoPosition:this.getInitialPositionForTetriminoType(t)})},rotateTetrimino:function(){if(this.state.activeTetrimino){var t=this.refs.activeTetrimino.getRotatedGrid(),e=this.fitTetriminoGridPositionInWellBounds(t,this.state.activeTetriminoPosition);this.isPositionAvailableForTetriminoGrid(t,e)&&this.refs.activeTetrimino.setState({grid:t})}},moveTetriminoToLeft:function(){this.moveTetrimino(-1)},moveTetriminoToRight:function(){this.moveTetrimino(1)},moveTetrimino:function(t){if(this.state.activeTetrimino){var e=this.refs.activeTetrimino.state.grid,i=_.clone(this.state.activeTetriminoPosition);i.x+=t,this.isPositionAvailableForTetriminoGrid(e,i)&&this.setState({activeTetriminoPosition:i})}},increaseSpeed:function(){this.setState({dropFrames:this.state.dropFrames-Flatris.DROP_FRAMES_DECREMENT})},onFrame:function(t){if(this.state.activeTetrimino){var e=this.refs.activeTetrimino.state.grid,i=_.clone(this.state.activeTetriminoPosition),s={cells:this.refs.activeTetrimino.getNumberOfCells(),hardDrop:this.state.dropAcceleration};i.y+=this.getDropStepForFrames(t),this.isPositionAvailableForTetriminoGrid(e,i)?this.setState({activeTetriminoPosition:i}):(i=this.getBottomMostPositionForTetriminoGrid(e,i),this.setState({activeTetriminoPosition:i}),s.lines=this.refs.wellGrid.transferTetriminoBlocksToGrid(this.refs.activeTetrimino,this.getGridPosition(this.state.activeTetriminoPosition)),this.loadTetrimino(null),i.y<0&&"function"==typeof this.props.onFullWell&&this.props.onFullWell(),"function"==typeof this.props.onTetriminoLanding&&this.props.onTetriminoLanding(s))}},componentDidUpdate:function(t,e){this.state.activeTetrimino&&this.state.activeTetrimino!=e.activeTetrimino&&this.refs.activeTetrimino.setState({grid:Flatris.SHAPES[this.state.activeTetrimino]})},render:function(){return React.DOM.div({className:"well"},React.DOM.div({className:"active-tetrimino",style:_.extend(this.getTetriminoCSSSize(),this.getActiveTetriminoCSSPosition())},this.loadChild("activeTetrimino")),this.loadChild("wellGrid"))},getTetriminoCSSSize:function(){return{width:100/this.props.cols*4+"%",height:100/this.props.rows*4+"%"}},getActiveTetriminoCSSPosition:function(){var t=this.getGridPosition(this.state.activeTetriminoPosition);return{top:100/this.props.rows*t.y+"%",left:100/this.props.cols*t.x+"%"}},getGridPosition:function(t){return{x:Math.floor(t.x),y:Math.floor(t.y)}},getInitialPositionForTetriminoType:function(t){if(!t)return{x:0,y:0};var e=Flatris.SHAPES[t];return{x:Math.round(this.props.cols/2)-Math.round(e[0].length/2),y:-2}},getDropStepForFrames:function(t){var e=this.state.dropAcceleration?Flatris.DROP_FRAMES_ACCELERATED:this.state.dropFrames;return t/e},isPositionAvailableForTetriminoGrid:function(t,e){var i,s,o,n,r=this.getGridPosition(e),a=t.length,l=t[0].length;for(i=0;a>i;i++)for(s=0;l>s;s++)if(t[i][s]){if(o=r.y+i,n=r.x+s,0>n||n>=this.props.cols)return!1;if(!(0>o)){if(o>=this.props.rows)return!1;if(this.refs.wellGrid.state.grid[o][n])return!1}}return!0},fitTetriminoGridPositionInWellBounds:function(t,e){var i,s,o,n,r=t.length,a=t[0].length;for(i=0;r>i;i++)for(s=0;a>s;s++)t[i][s]&&(o=e.y+i,n=e.x+s,0>n?e.x-=n:n>=this.props.cols&&(e.x-=n-this.props.cols+1));return e},getBottomMostPositionForTetriminoGrid:function(t,e){for(e.y=Math.floor(e.y);!this.isPositionAvailableForTetriminoGrid(t,e);)e.y-=1;return e}});